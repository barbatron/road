// Generated by CoffeeScript 1.6.2
(function() {
  var Layer, PaperLayer, layer, root, zIndex, _i, _len, _ref;

  root = this;

  zIndex = 0;

  Layer = (function() {
    function Layer(id) {
      var div, height, width;

      this.w = width = $('body').width();
      this.h = height = $('body').height();
      div = $("<div id='" + id + "'></div>");
      div.css({
        "border": "1px solid #aaa",
        "background-color": "rgba(0,0,0,0)",
        "position": "absolute"
      }, "left: 0", "top: 0", {
        "z-index": zIndex++,
        "width": width + "px",
        "height": height + "px"
      });
      $('body').append(div);
      this.ctx = new Raphael(id, 10000, 10000);
      this.clear();
    }

    Layer.prototype.clear = function() {
      return this.ctx.clear();
    };

    Layer.prototype.drawLine = function(line, color) {
      var c;

      if (color == null) {
        color = "#eee";
      }
      c = this.ctx.path("M " + line.p0.x + " " + line.p0.y + " \nL " + line.p1.x + " " + line.p1.y);
      c.attr("stroke", color);
      return c.attr("stroke-width", "2");
    };

    Layer.prototype.drawBeizer = function(beizer, color) {
      var c;

      if (color == null) {
        color = "#777";
      }
      c = this.ctx.path("M " + beizer.p0.x + " " + beizer.p0.y + "\nC " + beizer.p1.x + " " + beizer.p1.y + "\n  " + beizer.p2.x + " " + beizer.p2.y + "\n  " + beizer.p3.x + " " + beizer.p3.y);
      c.attr("stroke-width", "7");
      return c.attr("stroke", color);
    };

    Layer.prototype.drawHandle = function(handle, color, accentuate) {
      var c, rad, t;

      if (color == null) {
        color = "#3b3";
      }
      /*
      pos =
        nx: handle.node.pos.x,
        ny: handle.node.pos.y,
        rx: handle.pos.x - handle.node.pos.x, 
        ry: handle.pos.y - handle.node.pos.y    
         
      newPos = 
        x: pos.nx + pos.rx * scaling
        y: pos.ny + pos.ry * scaling
      */

      rad = 4;
      if (accentuate) {
        rad = 10;
      }
      c = this.ctx.circle(handle.pos.x, handle.pos.y, rad);
      c.attr("stroke", "#000");
      c.attr("fill", color);
      this.drawLine(handle.line);
      c.attr("stroke", "#000");
      t = this.ctx.text(handle.pos.x, handle.pos.y, handle.id);
      return t.attr("font-size", "5");
    };

    Layer.prototype.drawDot = function(pos, color) {
      var c;

      if (color == null) {
        color = "#505";
      }
      c = this.ctx.circle(pos.x, pos.y, 4);
      return c.attr("fill", color);
    };

    Layer.prototype.drawEdge = function(edge, color) {
      var c, p, t;

      if (color == null) {
        color = "#777";
      }
      c = this.ctx.path("M " + (edge.curve().p0.x) + " " + (edge.curve().p0.y) + "\nC " + (edge.curve().p1.x) + " " + (edge.curve().p1.y) + "\n  " + (edge.curve().p2.x) + " " + (edge.curve().p2.y) + "\n  " + (edge.curve().p3.x) + " " + (edge.curve().p3.y));
      c.attr("stroke-width", "6");
      c.attr("stroke", color);
      p = edge.curve().getPointAt(0.5, true);
      t = this.ctx.text(p.x, p.y, edge.id);
      return c;
    };

    Layer.prototype.drawLeaf = function(rectangle, color) {
      var c;

      if (color == null) {
        color = "rgba(200,0,0,0.5)";
      }
      c = this.ctx.path("M " + rectangle.p0.x + " " + rectangle.p0.y + "\nL " + rectangle.p1.x + " " + rectangle.p1.y + "\n  " + rectangle.p2.x + " " + rectangle.p2.y + "\n  " + rectangle.p3.x + " " + rectangle.p3.y);
      c.attr("stroke", color);
      return c.attr("fill", color);
    };

    Layer.prototype.drawLot = function(rectangle, color) {
      var c;

      if (color == null) {
        color = "rgba(180,210,180,0.3)";
      }
      c = this.ctx.path("M " + rectangle.p0.x + " " + rectangle.p0.y + "\nL " + rectangle.p1.x + " " + rectangle.p1.y + "\n  " + rectangle.p2.x + " " + rectangle.p2.y + "\n  " + rectangle.p3.x + " " + rectangle.p3.y);
      c.attr("stroke", color);
      return c.attr("fill", color);
    };

    Layer.prototype.remove = function(id) {
      return this.ctx.getById(id).remove();
    };

    Layer.prototype.drawNode = function(node, large) {
      var c;

      if (large == null) {
        large = false;
      }
      c = this.ctx.circle(node.pos.x, node.pos.y, 4);
      c.attr("fill", "#eee");
      if (large) {
        c = this.ctx.circle(node.pos.x, node.pos.y, 4);
      } else {
        c = this.ctx.circle(node.pos.x, node.pos.y, 2);
      }
      c.attr("stroke-width", "1");
      c.attr("fill", "#500");
      return c.attr("stroke", "#eee");
    };

    Layer.prototype.addNodeSnapper = function(node) {
      var c,
        _this = this;

      c = this.ctx.circle(node.pos.x, node.pos.y, 10);
      c.attr("fill", "rgba(0,0,0,0.1)");
      c.attr("stroke", "rgba(0,0,0,0.15)");
      c.mouseover(function(e) {
        return node.over(e);
      });
      return c.mouseout(function(e) {
        return node.out(e);
      });
    };

    Layer.prototype.addEdgeSnapper = function(edge) {
      var c,
        _this = this;

      c = this.ctx.path("M" + line.p0.x + " " + line.p0.y + " L" + line.p1.x + " " + line.p1.y);
      c.attr("stroke-width", "9");
      c.attr("stroke", "#eee");
      c.mouseover(function() {
        return edge.over();
      });
      return c.mouseout(function() {
        return edge.out();
      });
    };

    Layer.prototype.drawImpasse = function(pos) {
      var c;

      c = this.ctx.circle(pos.x, pos.y, 1);
      c.attr("fill", "#555");
      return c.attr("stroke", "#999");
    };

    return Layer;

  })();

  root.layers = {};

  _ref = ['main', 'tool', 'selection', 'handles', 'nodeSnap'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    layer = _ref[_i];
    root.layers[layer] = new Layer(layer);
  }

  PaperLayer = (function() {
    function PaperLayer(id) {
      var div;

      div = $("<canvas id='" + id + "'></canvas>");
      $('body').append(div);
      paper.setup(id);
    }

    return PaperLayer;

  })();

  new PaperLayer('papa');

}).call(this);

/*
//@ sourceMappingURL=layers.map
*/
